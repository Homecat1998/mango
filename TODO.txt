
---------------------------------------------------------------------------------------------
mango::core
---------------------------------------------------------------------------------------------

[ ] Improve SIMD compile-time feature detection
[ ] Improve CPU feature runtime detection (esp. Android)
[x] Configurable alignment for aligned_malloc/free (currently defaults to 16 bytes)
[ ] Unify stream offset type (size_t vs. u64)
[ ] should the seek offset by signed? u64 -> s64
[-] Improved string builder: variadic template variant of a + b + c + d.. -> makeString(a,b,c,d, ...)

---------------------------------------------------------------------------------------------
mango::image
---------------------------------------------------------------------------------------------

[x] struct LuminanceFormat for initializing luminance formats
[x] LUMINANCE -flag to format instead of inspecting the RGB(A) masks
[x] INDEXED -flag to format (limits bit depth to 1..8 bits, used by palette blitter)
[x] struct DecodeStatus, returned from ImageDecoder::decode()
    - frame number (to detect looping / terminating decoding)
    - decoder "name"  (example: "Huffman-Progressive YUV SSE4.1 blah blah")
    - was decoding direct? color converting? scaling? dithering? paletted.. source bitplanes..
[x] struct EncodeOptions, used by ImageEncoder::encode()
[ ] 1, 2 and 4 bit formats / blitting support
[ ] rename ColorRGBA / ColorBGRA? RGBA/BGRA won't work (used in Format class enums). rgba, u8_rgba, ..
[ ] namespace mango::image
[ ] Palette blitters (palette + index -> RGBA)
[x] Color quantizer / dithering for RGBA -> Palette + Index generation (supports 1..8 bits)
[ ] GIF decoder: preservation mode support for animation decoder
[x] GIF decoder should only support RGB decoding (because of the local palette)
[x] GIF encoder
[-] GIF encoder + animation
[ ] Blitter Engine v2.0
[ ] mango::ConstMemory for read-only or read-only intent memory regions

---------------------------------------------------------------------------------------------
mango::math
---------------------------------------------------------------------------------------------

[ ] expose ALL mango::simd functionality in mango::math::Vector

---------------------------------------------------------------------------------------------
misc
---------------------------------------------------------------------------------------------

[ ] Improve keyboard event handling on macOS
[ ] cmake: configurable building of "framebuffer", "opengl" and "vulkan"
           -- perhaps completely separate repositories / libraries

---------------------------------------------------------------------------------------------
compressed formats
---------------------------------------------------------------------------------------------

[ ] Unified compressed format handling / identifying systen
[x] ALL DXGI enumerations
[x] ALL GL enumerations (KTX parser has some already)
[ ] NO magic numbers in block.cpp format table.. use the DXGI and GL enumerations

[ ] FOURCC -> CompressedFormat (.dds)
[ ] DXGI -> CompressedFormat (.dds)
[ ] GL -> CompressedFormat (.ktx)
